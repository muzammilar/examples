# image information
# Default values for hello-postgres.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#--------------------------------------------
# User Defined

# external chart
externalCharts:
  postgres: True

# PostgreSQL-HA
postgresql-ha:
  # PGPool Configuration
  pgpool:
    # the password for the `admin` pgpool user
    # this password is used to connect to the pgpool admin console
    adminPassword: "" # password is overwritten by env variables

  # PostgreSQL Configuration (including replication manager)
  postgresql:
    # username, database, and password for the application
    # the user is created both in both postgres database(s) and the pgpool isntances
    username: "app_user"
    database: "app_database"
    password: ""

    # the password for the `postgres` super user
    # this is because we create a custom user for the application
    postgresPassword: ""

    # the password for the `repmgr` replication user
    # this password is required for updates between replicas
    repmgrPassword: ""

    # Sync or Async replication between replicas
    syncReplication: True
    # This specifies the method to choose synchronous standbys from the listed servers.
    # Valid values: empty, FIRST, ANY.
    syncReplicationMode: "ANY"

myapp:
  postgres:
    host: ""
